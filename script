local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Configuration and Settings
local CIRCLE_RADIUS = 100
local CIRCLE_COLOR = Color3.new(1, 1, 1)
local LINE_COLOR = Color3.new(1, 1, 1)
local MAX_DISTANCE = 1000

-- Settings (we'll control these through the UI)
local WALL_CHECK = true
local TEAM_CHECK = true
local SMOOTHNESS = 0.5

-- Drawing objects
local circle
local line

-- RenderStepped connection
local renderSteppedConnection

-- Create Window
local Window = OrionLib:MakeWindow({Name = "Nova", HidePremium = false, SaveConfig = true, ConfigFolder = "NovaConfigs"})

-- Main Tab
local MainTab = Window:MakeTab({
    Name = "Aimbot",
    Icon = "rbxassetid://4483345998",
    
    PremiumOnly = false
})
MainTab:AddLabel("Join our discord: discord.gg/2rvTcCuqvJ")
-- Toggle Wall Check
MainTab:AddToggle({
    Name = "Wall Check",
    Default = WALL_CHECK,
    Save = true,
    Color = Color3.fromRGB(94,197,216),
    Flag = "wallCheck",
    Callback = function(Value)
        WALL_CHECK = Value
    end    
})

-- Toggle Team Check
MainTab:AddToggle({
    Name = "Team Check",
    Default = TEAM_CHECK,
    Save = true,
    Color = Color3.fromRGB(94,197,216),
    Flag = "teamCheck",
    Callback = function(Value)
        TEAM_CHECK = Value
    end    
})

-- Slider for Smoothness
MainTab:AddSlider({
    Name = "Smoothness",
    Min = 0,
    Max = 100,
    Default = 50,
    Color = Color3.fromRGB(94,197,216),
    Increment = 1,
    ValueName = "%",
    Save = true,
    Flag = "smoothness",
    Callback = function(Value)
        SMOOTHNESS = Value / 100
    end    
})

-- Slider for Circle Radius
MainTab:AddSlider({
    Name = "Circle Radius",
    Min = 50,
    Max = 300,
    Default = CIRCLE_RADIUS,
    Color = Color3.fromRGB(94,197,216),
    Increment = 1,
    ValueName = "",
    Save = true,
    Flag = "circleRadius",
    Callback = function(Value)
        CIRCLE_RADIUS = Value
        if circle then
            circle.Radius = Value
        end
    end    
})

-- Color Picker for Circle
MainTab:AddColorpicker({
    Name = "Circle Color",
    Default = CIRCLE_COLOR,
    Save = true,
    Flag = "circleColor",
    Callback = function(Value)
        CIRCLE_COLOR = Value
        if circle then
            circle.Color = Value
        end
    end  
})

-- Color Picker for Line
MainTab:AddColorpicker({
    Name = "Line Color",
    Default = LINE_COLOR,
    Save = true,
    Flag = "lineColor",
    Callback = function(Value)
        LINE_COLOR = Value
    end  
})

-- Button to Reset Settings
MainTab:AddButton({
    Name = "Reset Settings",
    Callback = function()
        WALL_CHECK = true
        TEAM_CHECK = true
        SMOOTHNESS = 0.5
        CIRCLE_RADIUS = 100
        CIRCLE_COLOR = Color3.new(1, 1, 1)
        LINE_COLOR = Color3.new(1, 1, 1)
        
        -- Update UI elements
        OrionLib:SetToggle("wallCheck", true)
        OrionLib:SetToggle("teamCheck", true)
        OrionLib:SetSlider("smoothness", 50)
        OrionLib:SetSlider("circleRadius", 100)
        OrionLib:SetColor("circleColor", Color3.new(1, 1, 1))
        OrionLib:SetColor("lineColor", Color3.new(1, 1, 1))
        
        -- Update drawings
        if circle then
            circle.Radius = CIRCLE_RADIUS
            circle.Color = CIRCLE_COLOR
        end
    end    
})

-- Function to detach script and destroy all elements
local function detachScript()
    if renderSteppedConnection then
        renderSteppedConnection:Disconnect()
    end
    
    if circle then circle:Remove() end
    if line then line:Remove() end
    
    OrionLib:Destroy()
    
    circle = nil
    line = nil
    
    print("Script detached and elements destroyed.")
end

-- Button to Detach Script
MainTab:AddButton({
    Name = "Detach Script",
    Callback = function()
        detachScript()
    end    
})

-- ESP Tab
-- ESP Tab
local ESPTab = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Player Radar
ESPTab:AddButton({
    Name = "Player Radar",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/YazzTheDev/yazzesesp/main/PlayerRadar.lua"))()

    end    
})

-- Arrows ESP
ESPTab:AddButton({
    Name = "Arrows ESP",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/YazzTheDev/yazzesesp/main/Arrows.lua"))()

    end    
})

-- Skeleton ESP
ESPTab:AddButton({
    Name = "Skeleton ESP",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/YazzTheDev/yazzesesp/main/SkeletonESP.lua"))()
    end    
})

-- Corner 2D Box ESP
ESPTab:AddButton({
    Name = "Corner 2D Box ESP",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/YazzTheDev/yazzesesp/main/Corner%202D%20Box%20ESP.lua"))()

    end    
})
local function createDrawings()
    if circle then circle:Remove() end
    if line then line:Remove() end

    circle = Drawing.new("Circle")
    circle.Visible = true
    circle.Color = CIRCLE_COLOR
    circle.Thickness = 1
    circle.NumSides = 64
    circle.Radius = CIRCLE_RADIUS
    circle.Filled = false
    circle.Transparency = 1

    line = Drawing.new("Line")
    line.Visible = false
    line.Thickness = 2
    line.Transparency = 1
    line.Color = LINE_COLOR
end

local function isPlayerBehindWall(targetPosition)
    if not WALL_CHECK then return false end
    local ray = Ray.new(Camera.CFrame.Position, targetPosition - Camera.CFrame.Position)
    local part, position = workspace:FindPartOnRayWithIgnoreList(ray, {LocalPlayer.Character})
    return part and (position - targetPosition).Magnitude > 5
end

local function isTeamCheck(player)
    if not TEAM_CHECK then return true end
    return player.Team ~= LocalPlayer.Team
end

local function getPlayerTeamColor(player)
    if player.Team then
        return player.Team.TeamColor.Color
    else
        return LINE_COLOR
    end
end

local function updateDrawings()
    local mousePosition = UserInputService:GetMouseLocation()
    circle.Position = mousePosition

    local closestPlayer = nil
    local closestDistance = math.huge
    local closestHead = nil

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local headPosition, onScreen = Camera:WorldToViewportPoint(head.Position)

            if onScreen and isTeamCheck(player) then
                local distance = (Vector2.new(headPosition.X, headPosition.Y) - mousePosition).Magnitude

                if distance <= CIRCLE_RADIUS and distance < closestDistance and not isPlayerBehindWall(head.Position) then
                    closestPlayer = player
                    closestDistance = distance
                    closestHead = head
                end
            end
        end
    end

    if closestPlayer and closestHead then
        local headPosition = Camera:WorldToViewportPoint(closestHead.Position)
        line.From = mousePosition
        line.To = Vector2.new(headPosition.X, headPosition.Y)
        line.Color = LINE_COLOR
        line.Visible = true

        if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
            local targetCFrame = CFrame.new(Camera.CFrame.Position, closestHead.Position)
            local smoothFactor = 1 - SMOOTHNESS
            Camera.CFrame = Camera.CFrame:Lerp(targetCFrame, smoothFactor)
        end
    else
        line.Visible = false
    end
end

local function onCharacterAdded(character)
    if renderSteppedConnection then
        renderSteppedConnection:Disconnect()
    end

    createDrawings()
    renderSteppedConnection = RunService.RenderStepped:Connect(updateDrawings)
end

createDrawings()
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

if LocalPlayer.Character then
    onCharacterAdded(LocalPlayer.Character)
end

game:BindToClose(function()
    detachScript()
end)

OrionLib:Init()
